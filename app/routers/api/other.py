from datetime import datetime
from fastapi import APIRouter, Depends, HTTPException, status
import pytz
from app.integrations.telegram import send_telegram_message
from app.crud.collector import get_collector_by_id
from app.crud.group import get_group_by_id
from sqlalchemy.ext.asyncio import AsyncSession
from app.core.database import get_db
from app.routers.dependencies.auth import get_group_depend
from app.schemas.group import GroupRead
from app.core.config import settings
from typing import List

from app.utils.get_user_vk import get_user_info

router = APIRouter()

@router.post("/collectors/{collector_id}/complaint", status_code=201, tags=["collector"])
async def file_complaint(
    collector_id: int,
    complaint_text: str,
    vk_user_id: str,
    db: AsyncSession = Depends(get_db),
):
    """
    –ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ —Å–±–æ—Ä—â–∏–∫. –ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∞–º –≤ Telegram.
    """
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–±–æ—Ä—â–∏–∫–µ
    collector = await get_collector_by_id(db, collector_id)
    if not collector:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Collector not found")
    
    user_info = await get_user_info(vk_user_id)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –ú–æ—Å–∫–≤—ã
    moscow_tz = pytz.timezone('Europe/Moscow')
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC
    utc_now = datetime.now(pytz.utc)
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ú–æ—Å–∫–≤—ã
    moscow_now = utc_now.astimezone(moscow_tz)
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    formatted_time = moscow_now.strftime("%Y-%m-%d %H:%M:%S")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã
    message = (
        f"üö® *–ñ–∞–ª–æ–±–∞ –Ω–∞ —Å–±–æ—Ä—â–∏–∫*\n"
        f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
        f"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:*\n"
        f"‚Ä¢ *VK ID:* `{user_info.get('vk_id') or 'N/A'}`\n"
        f"‚Ä¢ *–ò–º—è:* `{user_info.get('full_name') or 'N/A'}`\n\n"
        f"üìã *–°–±–æ—Ä—â–∏–∫:*\n"
        f"‚Ä¢ *–ù–∞–∑–≤–∞–Ω–∏–µ:* `{collector.name}`\n"
        f"‚Ä¢ *ID:* `{collector.id}`\n"
        f"‚Ä¢ *–û–ø–∏—Å–∞–Ω–∏–µ:* `{collector.description or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`\n\n"
        f"üìù *–¢–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã:*\n"
        f"```\n{complaint_text}\n```\n"
        f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
        f"üìÖ *–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏:* {formatted_time or 'N/A'}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∂–∞–ª–æ–±—É –≤ Telegram
    admin_ids = [settings.admin_id_first, settings.admin_id_second, settings.admin_id_third]
    await send_telegram_message(message, admin_ids)

    return {"detail": "Complaint successfully submitted"}